# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'qt_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from FileManager import FileManager
from PyQt5 import QtCore, QtGui, QtWidgets
from tkinter import Tk, messagebox
from tkinter.filedialog import askdirectory
import os
import json 
import time

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(380, 617)
        MainWindow.setAutoFillBackground(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setStyleSheet("QFrame{\n"
"    background-color : rgb(0,0,0);\n"
"}")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.source_path_txt = QtWidgets.QLabel(self.frame)
        self.source_path_txt.setGeometry(QtCore.QRect(20, 80, 91, 31))
        self.source_path_txt.setStyleSheet("QLabel {\n"
"    color : rgb(120,120,120);\n"
"}")
        self.source_path_txt.setObjectName("source_path_txt")
        self.source_path_btn = QtWidgets.QPushButton(self.frame)
        self.source_path_btn.setGeometry(QtCore.QRect(260, 120, 91, 31))
        self.source_path_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.source_path_btn.setStyleSheet("QPushButton{\n"
"    background-color : rgba(85, 255, 127,0);\n"
"    color : rgb(220, 220, 220);\n"
"    border : 1px solid rgb(85, 0, 255);\n"
"    border-radius: 5;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color : rgb(85, 0, 255);\n"
"    color : rgb(255,255,255);\n"
"}")
        self.source_path_btn.setObjectName("source_path_btn")
        self.lineEdit = QtWidgets.QLineEdit(self.frame)
        self.lineEdit.setGeometry(QtCore.QRect(20, 120, 221, 31))
        self.lineEdit.setStyleSheet("QLineEdit{\n"
"    background-color : rgba(255, 255, 255, 0);\n"
"    border : 1px solid rgb(85, 0, 255);\n"
"    color : white;\n"
"}")
        self.lineEdit.setObjectName("lineEdit")
        self.des_path_txt = QtWidgets.QLabel(self.frame)
        self.des_path_txt.setGeometry(QtCore.QRect(20, 230, 91, 31))
        self.des_path_txt.setStyleSheet("QLabel {\n"
"    color : rgb(120,120,120);\n"
"}")
        self.des_path_txt.setObjectName("des_path_txt")
        self.des_path_btn = QtWidgets.QPushButton(self.frame)
        self.des_path_btn.setGeometry(QtCore.QRect(260, 270, 91, 31))
        self.des_path_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.des_path_btn.setStyleSheet("QPushButton{\n"
"    background-color : rgba(85, 255, 127,0);\n"
"    color : rgb(220, 220, 220);\n"
"    border : 1px solid rgb(85, 0, 255);\n"
"    border-radius: 5;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color : rgb(85, 0, 255);\n"
"    color : rgb(255,255,255);\n"
"}")
        self.des_path_btn.setObjectName("des_path_btn")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_2.setGeometry(QtCore.QRect(20, 270, 221, 31))
        self.lineEdit_2.setStyleSheet("QLineEdit{\n"
"    background-color : rgba(255, 255, 255, 0);\n"
"    border : 1px solid rgb(85, 0, 255);\n"
"    color : white;\n"
"}")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.sort_btn = QtWidgets.QPushButton(self.frame)
        self.sort_btn.setGeometry(QtCore.QRect(20, 420, 91, 31))
        self.sort_btn.setStyleSheet("QPushButton{\n"
"    background-color : rgb(65, 0, 215);\n"
"    color : rgb(220, 220, 220);\n"
"    border : 1px solid rgb(85, 0, 255);\n"
"    border-radius: 5;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color : rgba(85, 0, 255,0.5);\n"
"    color : rgb(255,255,255);\n"
"    border : 1px solid rgb(60, 0, 180);\n"
"}")
        self.sort_btn.setObjectName("sort_btn")
        self.verticalLayout.addWidget(self.frame)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.source_path_txt.setText(_translate("MainWindow", "Source Path :"))
        self.source_path_btn.setText(_translate("MainWindow", "Source Path"))
        self.lineEdit.setText(_translate("MainWindow", "C:/Users/Name/Downloads"))
        self.des_path_txt.setText(_translate("MainWindow", "Destination Path :"))
        self.des_path_btn.setText(_translate("MainWindow", "Final Path"))
        self.lineEdit_2.setText(_translate("MainWindow", "C:/Users/Name/Sorted Downloads"))
        self.sort_btn.setText(_translate("MainWindow", "Sort"))

        self.cnct_btns()
        self.file_manager = FileManager()


    def cnct_btns(self):
        self.source_path_btn.clicked.connect(lambda : self.set_path(self.lineEdit))
        self.des_path_btn.clicked.connect(lambda : self.set_path(self.lineEdit_2))
        self.sort_btn.clicked.connect(self.sort)


    def set_path(self,textBox):
        win = Tk()
        win.withdraw()
        path = askdirectory(title = 'Source path')
        if path == '' or path is None:
            messagebox.showwarning("Warning","Invalid file path")
            return
        textBox.setText(path)

    def sort(self):
        src_path = self.lineEdit.text() 
        des_path = self.lineEdit_2.text()
        win = Tk()
        win.withdraw()

        # # checks for the paths
        # if src_path == des_path :
        #     messagebox.showwarning("Warning" , "You can't sort in the same Directory")
        #     return 
        if not (os.path.exists(src_path) and os.path.exists(des_path)):
            messagebox.showerror("Error","File Path doesn't exist")
            return
        if len(os.listdir(src_path)) == 0:
            messagebox.showerror("Error","Source directory is empty")
            return

        reply = messagebox.askyesno("Are you sure?",f"Do you want to sort the files in {src_path}")
        if not reply :
            return

        print(src_path,des_path)
        rtn = self.file_manager.transfer(src_path,des_path)
        if rtn == True:
            messagebox.showinfo("Info","Operation Complete")
    


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()

    sys.exit(app.exec_())
